<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>/dev/null</title><link>https://www.vittegleo.com/</link><description></description><atom:link href="https://www.vittegleo.com/feeds/all.rss.xml" rel="self"></atom:link><lastBuildDate>Thu, 08 Aug 2013 21:00:00 -0700</lastBuildDate><item><title>Dictionary Attack on Bitcoin Brainwallets</title><link>https://www.vittegleo.com/dictionary-attack-on-bitcoin-brainwallets.html</link><description>&lt;p&gt;I wanted to create a simple program that would take a dictionary word, convert it into a bitcoin address, and then check to see if any bitcoin transactions had ever taken place with this address. I was curious to see how many insecure brainwallets existed.&lt;/p&gt;
&lt;p&gt;I was able to borrow the bitcoin address generation &lt;a class="reference external" href="https://github.com/weex/addrgen/blob/master/addrgen.py"&gt;code&lt;/a&gt; and had initially planned to point it at &lt;a class="reference external" href="http://blockexplorer.com/"&gt;blockexplorer.com&lt;/a&gt; but then realized that this would probably end up flooding the site with traffic. It also appeared to be possible to get address information from a local bitcoin server (using JSON-RPC), but it was fairly slow. I then moved on to setting up a blockexplorer of my own called &lt;a class="reference external" href="https://github.com/jtobey/bitcoin-abe"&gt;Abe&lt;/a&gt;. After getting it up and running, it took over a week to insert all transactions into the database from the blockchain.&lt;/p&gt;
&lt;p&gt;It was then just a matter of finding a simple &lt;a class="reference external" href="http://downloads.skullsecurity.org/passwords/english.txt.bz2"&gt;dictionary&lt;/a&gt; file and writing a script to:&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Convert a word into public/private bitcoin addresses&lt;/li&gt;
&lt;li&gt;Check with local Abe server using HTTP request to see if any bitcoins had ever been received to this public address.&lt;/li&gt;
&lt;li&gt;Print output and save to file any addresses that had transactions take place.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;You can find the script on &lt;a class="reference external" href="https://github.com/dan-v/bruteforce-bitcoin-brainwallet"&gt;Github&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;Here are the addresses I found with this particular dictionary. Apparently this dictionary has duplicate words, so a little cleanup was required.&lt;/p&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;Word         Received Bitcoins  Public Address
a            0.01               1HUBHMij46Hae75JPdWjeZ5Q7KaL7EFRSD
cat          0.15               162TRPRZvdgLVNksMoMyGJsYBfYtB4Q8tM
chicken      0.001              15Z16yvxv3oH6FBd83qkgo8AmzYcaSy2vX
destruction  0.09               11p4664ndnKmiPBL6naW9nF9z91skDdkf
dog          0.01               19MxhZPumMt9ntfszzCTPmWNQeh6j6QqP2
hangzhou     0.2                1EaUxkWMQ1kGPh3gWLev3Uzb2MUEmP59ws
love         0.012              1Mm6ouhpHqbtahCRNYfTo7Art1fbmk7PcR
password     0.06108            16ga2uqnF1NqpAuQeeg7sTCAdtDUwDyJav
poop         0.001              1LVL6qEhMQTbNtSBDfBkmzo5ZS1PwaKZWs
root         0.001              148qEts4TkouGRwvUMRFM8dB9MjxM6iCuN
sausage      0.01               1TnnhMEgic5g4ttrCQyDopwqTs4hheuNZ
supper       0.002              16rAKW1gUqtQL8PaaYM2Drkitm686kgdEC
swordfish    0.00144271         1PG9p4dG3vhZ8gx19aVdu5ZfECw9Q7N3B6
test         0.0511876          1HKqKTMpBTZZ8H5zcqYEWYBaaWELrDEXeE
very         0.0075             16NpdGeEeEebivqHGSXeDCjozr9yKHeZPD
wang         0.0001             1AjzxqeicCxMYDSAW5xqk1is3KX8eipD82
you          0.01               1NGj2UvhbC79ZXFBPBaXSmf7vwRy7cXK5R
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan</dc:creator><pubDate>Thu, 08 Aug 2013 21:00:00 -0700</pubDate><guid>tag:https://www.vittegleo.com,2013-08-08:dictionary-attack-on-bitcoin-brainwallets.html</guid><category>bitcoin</category><category>bruteforce</category><category>script</category><category>python</category></item><item><title>Convert VMDK from Thin to Eager Zero</title><link>https://www.vittegleo.com/convert-vmdk-from-thin-to-eager-zero.html</link><description>&lt;p&gt;This is one way to convert a thin provisioned VMDK into a thick provisioned eager zeroed VMDK. I was unable to mount a thin provisioned VMDK in read/write mode using vmware-mount.exe, so this is how I worked around it. You will need the VMware Virtual Disk Development Kit (&lt;a class="reference external" href="https://communities.vmware.com/community/vmtn/developer/forums/vddk"&gt;VDDK&lt;/a&gt;) to do this.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;After installing VDDK, open cmd.exe and use vmware-vdiskmanager to convert the VMDK.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cd c:\Program Files (x86)\VMware\VMware Virtual Disk Development Kit\bin
vmware-vdiskmanager -r c:\thin_provisioned.vmdk -t 2 c:\thick_eager_zero.vmdk
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan</dc:creator><pubDate>Thu, 03 Jan 2013 20:00:00 -0800</pubDate><guid>tag:https://www.vittegleo.com,2013-01-03:convert-vmdk-from-thin-to-eager-zero.html</guid><category>vmware</category><category>windows</category><category>convert</category><category>vmdk</category></item><item><title>Custom CentOS Live CD</title><link>https://www.vittegleo.com/custom-centos-live-cd.html</link><description>&lt;p&gt;This is a quick tutorial on creating a custom CentOS Live CD. This was done with CentOS 6.2.&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;First step is to download the CentOS Live CD ISO.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir /iso
cd /iso
wget &amp;lt;url for centos live ISO&amp;gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mount CentOS ISO and copy the contents to temporary location.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mount CentOS-6.2-x86_64-LiveCD.iso mnt -o loop
mkdir CentOS-6.2-x86_64-LiveCD
cp -arp mnt/* CentOS-6.2-x86_64-LiveCD/
umount mnt
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create a custom isolinux.cfg file. This menu will be displayed when booting the custom CentOS Live CD.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##########&lt;/span&gt;
UI vesamenu.c32
MENU TITLE Custom CentOS
TIMEOUT 50

DEFAULT centos
LABEL centos
KERNEL vmlinuz0
APPEND &lt;span class="nv"&gt;initrd&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;initrd0.img &lt;span class="nv"&gt;root&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;live:CDLABEL&lt;span class="o"&gt;=&lt;/span&gt;CentOS-6.2-x86_64-LiveCD &lt;span class="nv"&gt;rootfstype&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;auto ro liveimg 3 quiet nodiskmount nolvmmount  rhgb &lt;span class="nv"&gt;vga&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;791 rd.luks&lt;span class="o"&gt;=&lt;/span&gt;0 rd.md&lt;span class="o"&gt;=&lt;/span&gt;0 rd.dm&lt;span class="o"&gt;=&lt;/span&gt;0 &lt;span class="nv"&gt;selinux&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;0
&lt;span class="c"&gt;##########&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Overwrite isolinux.cfg file in temporary location.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;cp isolinux.cfg CentOS-6.2-x86_64-LiveCD/isolinux/
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Mount squashfs and copy off all contents to temporary location. Mount ext3fs filesystem.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mount CentOS-6.2-x86_64-LiveCD/LiveOS/squashfs.img mnt -o loop -t squashfs
mkdir squashfs
cp -a mnt/* squashfs
umount mnt
mkdir ext3fs
mount squashfs/LiveOS/ext3fs.img ext3fs -o loop
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Edit file ext3fs/etc/rc.local to change boot settings for custom ISO. In this case configuring networking, creating a ramdisk, and presenting it over NFS.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;&lt;span class="c"&gt;##########&lt;/span&gt;
touch /var/lock/subsys/local
/sbin/ifconfig eth0 0.0.0.0
/sbin/ifconfig eth0 up
/sbin/ifconfig eth1 0.0.0.0
/sbin/ifconfig eth1 up
/sbin/vconfig add eth0 101
/sbin/vconfig add eth1 101
/sbin/ifconfig eth0.101 192.168.101.103 netmask 255.255.255.0
/sbin/ifconfig eth1.101 192.168.101.104 netmask 255.255.255.0
/sbin/ifconfig eth2 192.168.100.103 netmask 255.255.255.0 up
/sbin/ifconfig eth3 192.168.100.104 netmask 255.255.255.0 up
/bin/mkdir /ramdisk
/bin/mount -o &lt;span class="nv"&gt;size&lt;/span&gt;&lt;span class="o"&gt;=&lt;/span&gt;10G -t tmpfs tmpfs /ramdisk
/bin/echo &lt;span class="s1"&gt;&amp;#39;/ramdisk *(rw,sync,insecure,fsid=1,all_squash,sync,no_wdelay)&amp;#39;&lt;/span&gt;&amp;gt;/etc/exports
/sbin/service nfs restart
&lt;span class="c"&gt;##########&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Chroot into mounted ext3fs filesystem and make any required modifications. In this case, updating root password, disabling firewall, and enabling sshd.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;chroot /iso/ext3fs/
passwd root passwd
chkconfig NetworkManager off
chkconfig iptables off
chkconfig ip6tables off
chkconfig sshd on
&lt;span class="nb"&gt;exit&lt;/span&gt;
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Regenerate squashfs and create new ISO (Custom-CentOS.iso).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;rm /iso/CentOS-6.2-x86_64-LiveCD/LiveOS/squashfs.img
mksquashfs /iso/squashfs /iso/CentOS-6.2-x86_64-LiveCD/LiveOS/squashfs.img
mkisofs -o Custom-CentOS.iso &lt;span class="se"&gt;\&lt;/span&gt;
      -J -r -hide-rr-moved -hide-joliet-trans-tbl -V CentOS-6.2-x86_64-LiveCD &lt;span class="se"&gt;\&lt;/span&gt;
      -b isolinux/isolinux.bin -c isolinux/boot.cat &lt;span class="se"&gt;\&lt;/span&gt;
      -no-emul-boot -boot-load-size 4 -boot-info-table &lt;span class="se"&gt;\&lt;/span&gt;
      /iso/CentOS-6.2-x86_64-LiveCD
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan</dc:creator><pubDate>Wed, 12 Dec 2012 22:00:00 -0800</pubDate><guid>tag:https://www.vittegleo.com,2012-12-12:custom-centos-live-cd.html</guid><category>centos</category><category>linux</category><category>livecd</category></item><item><title>Injecting Drivers into Windows ISO</title><link>https://www.vittegleo.com/injecting-drivers-into-windows-iso.html</link><description>&lt;p&gt;Here are some notes on injecting drivers into a Windows ISO. There are two images boot.wim (WindowsPE) and install.wim (actual Windows setup files) that need to be updated. In this case I am using a Windows 2008 R2 ISO. Note that Windows 2012 has PowerShell Cmdlets for DISM commands (see &lt;a class="reference external" href="http://technet.microsoft.com/en-us/library/hh852126.aspx"&gt;here&lt;/a&gt;).&lt;/p&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;First make some working directories.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;mkdir c:\drivers
mkdir c:\mount
mkdir c:\iso
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Copy all of the drivers you want to add into the c:\drivers directory.&lt;/li&gt;
&lt;li&gt;Insert Windows 2008 CDROM/ISO and manually copy all files into c:\iso directory.&lt;/li&gt;
&lt;li&gt;List wim file indexes and figure out correct one to edit.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dism /get-wiminfo /wimfile:c:\boot.wim
dism /get-wiminfo /wimfile:c:\install.wim
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Edit boot.wim and add drivers. In this case, adding VMware drivers (Paravirtual SCSI driver and VMXNET3 network driver).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dism /Mount-Wim /WimFile:C:\boot.wim /Index:2 /MountDir:c:\mount
dism /image:c:\mount /Add-Driver /driver:c:\drivers\pvscsi.inf
dism /image:c:\mount /Add-Driver /driver:c:\drivers\vmxnet3ndis6.inf
dism /unmount-wim /mountdir:c:\mount /commit
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Edit install.wim and add drivers. In this case, it's only being added to index 5 which is Datacenter Full edition (since this is the only one I needed at the time).&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;dism /Mount-Wim /WimFile:C:\install.wim /Index:5 /MountDir:c:\mount
dism /image:c:\mount /Add-Driver /driver:c:\drivers\pvscsi.inf
dism /image:c:\mount /Add-Driver /driver:c:\drivers\vmxnet3ndis6.inf
dism /unmount-wim /mountdir:c:\mount /commit
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Copy the updated wim files and overwrite the ones in c:\iso directory.&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;copy c:\boot.wim c:\iso\sources\boot.wim
copy c:\install.wim c:\iso\sources\install.wim
&lt;/pre&gt;&lt;/div&gt;
&lt;ul class="simple"&gt;
&lt;li&gt;Create a new ISO&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="highlight"&gt;&lt;pre&gt;oscdimg.exe -lGRMSXVOL_EN_DVD -m -u2 -bC:\iso\boot\etfsboot.com C:\iso C:\Windows_2008_R2_With_Injected_VMware_Drivers.ISO
&lt;/pre&gt;&lt;/div&gt;
</description><dc:creator xmlns:dc="http://purl.org/dc/elements/1.1/">Dan</dc:creator><pubDate>Mon, 03 Dec 2012 22:00:00 -0800</pubDate><guid>tag:https://www.vittegleo.com,2012-12-03:injecting-drivers-into-windows-iso.html</guid><category>windows</category><category>drivers</category><category>vmware</category></item></channel></rss>